apply plugin: 'com.android.application'

android {
    compileSdk 35
    defaultConfig {
        applicationId "edu.cs4730.livedatademo"
        minSdkVersion 29
        targetSdk 35
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
    }
    namespace 'edu.cs4730.livedatademo'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.8.7"
    // LiveData, no using in this example.
    implementation "androidx.lifecycle:lifecycle-livedata:2.8.7"
    //to use livedata with reactiveStreams
    //implementation "androidx.lifecycle:lifecycle-reactivestreams:2.5.1"
    implementation("com.google.android.material:material:1.12.0")
    //really dumb, needed to stop a duplicate dependency, even though not use kotlin at all, hopefully at some point won't need it.
    //but with android view model, doesn't seem to have the same problem.  really weird.  leaving the commented out line just in case.
//    constraints {
//        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
//            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
//        }
//        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
//            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
//        }
//    }
}
