apply plugin: 'com.android.application'

android {
    compileSdk 33
    defaultConfig {
        applicationId "edu.cs4730.fcmretrrofit2livedatademo"
        minSdkVersion 28
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    buildFeatures {
        viewBinding = true
    }
    namespace 'edu.cs4730.fcmretrrofit2livedatademo'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //firebase messages stuff.
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-messaging:23.2.1'
    //replaces the jobservice with a worker instead,  jobservice is depreciated.
    implementation "androidx.work:work-runtime:2.8.1"
    implementation 'com.android.volley:volley:1.2.1'
    //room etc stuff.
    implementation "androidx.room:room-runtime:2.5.2"
    annotationProcessor "androidx.room:room-compiler:2.5.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata:2.6.2"
    //implementation "androidx.lifecycle:lifecycle-runtime:2.4.1"
    //annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.1.0"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.2"

    //retrofit for rest api calls.
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    //really dumb, needed to stop a duplicate dependency, even though not use kotlin at all, hopefully at some point won't need it.
    //but with android view model, doesn't seem to have the same problem.  really weird.  leaving the commented out line just in case.
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}

apply plugin: 'com.google.gms.google-services'